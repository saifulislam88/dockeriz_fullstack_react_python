from flask import Flask, request, jsonify
import psycopg2
import pika

app = Flask(__name__)

# Connect to PostgreSQL
conn = psycopg2.connect(
    dbname='appdb', user='user', password='pass', host='postgres'
)
cur = conn.cursor()
cur.execute("""
    CREATE TABLE IF NOT EXISTS students (
        id SERIAL PRIMARY KEY,
        name TEXT,
        email TEXT,
        batch TEXT
    )
""")
conn.commit()

@app.route('/api/submit', methods=['POST'])
def submit():
    data = request.get_json()
    name = data.get('name')
    email = data.get('email')
    batch = data.get('batch')

    # Insert into PostgreSQL
    cur.execute(
        "INSERT INTO students (name, email, batch) VALUES (%s, %s, %s)",
        (name, email, batch)
    )
    conn.commit()

    # Publish to RabbitMQ
    credentials = pika.PlainCredentials('guest', 'guest')
    parameters = pika.ConnectionParameters('rabbitmq', 5672, '/', credentials)
    connection = pika.BlockingConnection(parameters)
    channel = connection.channel()
    channel.queue_declare(queue='student_queue', durable=True)
    channel.basic_publish(
        exchange='',
        routing_key='student_queue',
        body=str(data)
    )
    connection.close()

    return jsonify({"message": "Data stored and queued."})

if __name__ == '__main__':
    app.run(host='0.0.0.0', port=5000)
